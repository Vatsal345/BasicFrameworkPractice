<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-17T18:45:32Z" name="Suite" finished-at="2022-06-17T18:46:05Z" duration-ms="33096">
    <groups>
    </groups>
    <test started-at="2022-06-17T18:45:32Z" name="Test" finished-at="2022-06-17T18:46:05Z" duration-ms="33096">
      <class name="test.LoginTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:32Z" name="beforeMethod" finished-at="2022-06-17T18:45:38Z" duration-ms="6047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithWrongEmailPasswordTest()[pri:1, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:38Z" name="loginWithWrongEmailPasswordTest" finished-at="2022-06-17T18:45:41Z" duration-ms="3638" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[TypeError: browsingContext.currentWindowGlobal is null
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'Vatsals-MacBook-Pro.local', ip: '2607:fea8:9df:2740:0:0:0:529d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [bbca0003-a8cc-429f-a0d0-facdef80122e, findElement {using=id, value=globalError}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 101.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220608170832, moz:debuggerAddress: localhost:62202, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 61183, moz:profile: /var/folders/h9/dqyc75f11_3..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: MAC, platformName: MAC, platformVersion: 21.2.0, proxy: Proxy(), se:cdp: ws://localhost:62202/devtoo..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: bbca0003-a8cc-429f-a0d0-facdef80122e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: TypeError: browsingContext.currentWindowGlobal is null
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'Vatsals-MacBook-Pro.local', ip: '2607:fea8:9df:2740:0:0:0:529d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [bbca0003-a8cc-429f-a0d0-facdef80122e, findElement {using=id, value=globalError}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 101.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220608170832, moz:debuggerAddress: localhost:62202, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 61183, moz:profile: /var/folders/h9/dqyc75f11_3..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: MAC, platformName: MAC, platformVersion: 21.2.0, proxy: Proxy(), se:cdp: ws://localhost:62202/devtoo..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: bbca0003-a8cc-429f-a0d0-facdef80122e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy14.getText(Unknown Source)
at pages.LoginPage.readGlobalError(LoginPage.java:81)
at test.LoginTest.loginWithWrongEmailPasswordTest(LoginTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithWrongEmailPasswordTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:41Z" name="afterMethod" finished-at="2022-06-17T18:45:42Z" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:42Z" name="beforeMethod" finished-at="2022-06-17T18:45:47Z" duration-ms="4867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithEmptyEmailTest()[pri:2, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:47Z" name="LoginWithEmptyEmailTest" finished-at="2022-06-17T18:45:49Z" duration-ms="2468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithEmptyEmailTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:49Z" name="afterMethod" finished-at="2022-06-17T18:45:50Z" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:50Z" name="beforeMethod" finished-at="2022-06-17T18:45:54Z" duration-ms="4365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithEmptyPasswordTest()[pri:3, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:54Z" name="LoginWithEmptyPasswordTest" finished-at="2022-06-17T18:45:57Z" duration-ms="2539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithEmptyPasswordTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:57Z" name="afterMethod" finished-at="2022-06-17T18:45:57Z" duration-ms="560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:45:57Z" name="beforeMethod" finished-at="2022-06-17T18:46:02Z" duration-ms="4189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginWithSpecialCharTest()[pri:4, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:46:02Z" name="LoginWithSpecialCharTest" finished-at="2022-06-17T18:46:04Z" duration-ms="2527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithSpecialCharTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.LoginTest@6c779568]" started-at="2022-06-17T18:46:04Z" name="afterMethod" finished-at="2022-06-17T18:46:05Z" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
